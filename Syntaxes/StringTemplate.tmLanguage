<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>fileTypes</key>
	<array>
		<string>stg</string>
		<string>sti</string>
		<string>st</string>
	</array>
	<key>foldingStartMarker</key>
	<string>(\[|&lt;&lt;|\$if(.*)\$)\s*$</string>
	<key>foldingStopMarker</key>
	<string>(\]|&gt;&gt;|\$endif\$)</string>
	<key>keyEquivalent</key>
	<string>^~S</string>
	<key>name</key>
	<string>StringTemplate</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>include</key>
			<string>#class</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#map</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#methods</string>
		</dict>
		<dict>
			<key>match</key>
			<string>//.*\n</string>
			<key>name</key>
			<string>comment.line.double-slash.StringTemplate</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.comment.StringTemplate</string>
				</dict>
			</dict>
			<key>match</key>
			<string>/\*\*/</string>
			<key>name</key>
			<string>comment.block.empty.StringTemplate</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>(/\*|\$!)</string>
			<key>captures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.comment.StringTemplate</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(\*/|!\$)</string>
			<key>name</key>
			<string>comment.block</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>comment.line.double-slash.java</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.comment.java</string>
				</dict>
			</dict>
			<key>match</key>
			<string>\s*((//).*$\n?)</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#string</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#template</string>
		</dict>
	</array>
	<key>repository</key>
	<dict>
		<key>anonymous_template</key>
		<dict>
			<key>begin</key>
			<string>{</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.section.anonymous_template.begin.StringTemplate</string>
				</dict>
			</dict>
			<key>end</key>
			<string>}</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.section.anonymous_template.end.StringTemplate</string>
				</dict>
			</dict>
			<key>name</key>
			<string>storage.anonymous_template.StringTemplate</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#</string>
				</dict>
			</array>
		</dict>
		<key>assignment</key>
		<dict>
			<key>begin</key>
			<string>(\w+)</string>
			<key>end</key>
			<string></string>
			<key>name</key>
			<string>meta.variable.assignment</string>
		</dict>
		<key>class</key>
		<dict>
			<key>begin</key>
			<string>\b(?=group|interface)\b</string>
			<key>end</key>
			<string>;</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.section.class.end.StringTemplate</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.class.StringTemplate</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#class_name</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#parent_class</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#interfaces</string>
				</dict>
			</array>
		</dict>
		<key>class_name</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.type.class.StringTemplate</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.type.class.StringTemplate</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(group|interface)\s+(\w+)</string>
		</dict>
		<key>conditional</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#if</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#else</string>
				</dict>
			</array>
		</dict>
		<key>else</key>
		<dict>
			<key>disabled</key>
			<integer>0</integer>
			<key>match</key>
			<string>(else|endif)</string>
			<key>name</key>
			<string>keyword.control.conditional.StringTemplate</string>
		</dict>
		<key>group</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.name.type.class.StringTemplate</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>punctuation.separator</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>entity.other.inherited-class.StringTemplate</string>
				</dict>
			</dict>
			<key>match</key>
			<string>\s*(\w+)\s*(:\s*(\w+))?</string>
		</dict>
		<key>if</key>
		<dict>
			<key>begin</key>
			<string>(if|elseif)(\()</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.control.conditional.StringTemplate</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>punctuation.section.conditional.begin.StringTemplate</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(\)*)</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.section.conditional.end.StringTemplate</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.conditional.StringTemplate</string>
		</dict>
		<key>interfaces</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.control.StringTemplate</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.other.type.interface.StringTemplate</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>entity.other.type.interface.StringTemplate</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(implements)\s+(\w+)\s*(,\s*(\w+))*</string>
		</dict>
		<key>keywords</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(default|first|group|if|implements|interface|last|length|optional|rest|strip|super|trunc|else|endif|elseif)</string>
					<key>name</key>
					<string>keyword.reserved.StringTemplate</string>
				</dict>
			</array>
		</dict>
		<key>lhs</key>
		<dict>
			<key>comment</key>
			<string>The left side of an assignment statement</string>
			<key>name</key>
			<string>variable.parameter.StringTemplate</string>
		</dict>
		<key>map</key>
		<dict>
			<key>begin</key>
			<string>(\w+)\s*(::=)\s*(\[)</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>support.function.StringTemplate</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.array.begin.StringTemplate</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.array.begin.StringTemplate</string>
				</dict>
			</dict>
			<key>end</key>
			<string>\]</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.array.end.StringTemplate</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.structure.dictionary.StringTemplate</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\b(default|key)\b</string>
					<key>name</key>
					<string>keyword.control.StringTemplate</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#string</string>
				</dict>
				<dict>
					<key>disabled</key>
					<integer>1</integer>
					<key>match</key>
					<string>\b[^"].*[^"]\b</string>
					<key>name</key>
					<string>invalid.map.unquoted.StringTemplate</string>
				</dict>
			</array>
		</dict>
		<key>methods</key>
		<dict>
			<key>begin</key>
			<string>(?=\w.*\s+)(?=[^=]+\()</string>
			<key>end</key>
			<string>(\&gt;\&gt;)</string>
			<key>name</key>
			<string>meta.method.StringTemplate</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(\w+)\s*\(</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>entity.name.function.StringTemplate</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\)</string>
					<key>name</key>
					<string>meta.method.identifier.StringTemplate</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#parameters</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(::=\&lt;\&lt;)</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.function.begin.StringTemplate</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?=\&gt;\&gt;)</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.function.end.StringTemplate</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.method.body.StringTemplate</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>begin</key>
							<string>(\$!)</string>
							<key>captures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.comment.StringTemplate</string>
								</dict>
							</dict>
							<key>end</key>
							<string>(!\$)</string>
							<key>name</key>
							<string>comment.block</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#stringtemplate</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>named_args</key>
		<dict>
			<key>begin</key>
			<string>\b(\w+)\s*(=)(?!=)</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>variable.parameter.function.StringTemplate</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.assignment.StringTemplate</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>variable.parameter</string>
				</dict>
			</dict>
			<key>end</key>
			<string>\s*(?=(,)|(\)))</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.separator.parameters.StringTemplate</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#anonymous_template</string>
				</dict>
				<dict>
					<key>include</key>
					<string>$self</string>
				</dict>
			</array>
		</dict>
		<key>parameters</key>
		<dict>
			<key>contentName</key>
			<string>meta.function.parameters.StringTemplate</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#named_args</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\w+</string>
					<key>name</key>
					<string>variable.parameter.StringTemplate</string>
				</dict>
			</array>
		</dict>
		<key>parent_class</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.separator</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.other.inherited-class.StringTemplate</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(:)\s*(\w+)</string>
		</dict>
		<key>rhs</key>
		<dict>
			<key>comment</key>
			<string>Anything that can be used in as the right hand side of an assignment statement</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#string</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#anonymous_template</string>
				</dict>
			</array>
		</dict>
		<key>string</key>
		<dict>
			<key>begin</key>
			<string>(")</string>
			<key>end</key>
			<string>(")</string>
			<key>name</key>
			<string>string.quoted.double.StringTemplate</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\\.</string>
					<key>name</key>
					<string>constant.character.escape.untitled</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#template</string>
				</dict>
			</array>
		</dict>
		<key>stringtemplate</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#template</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#string</string>
				</dict>
			</array>
		</dict>
		<key>template</key>
		<dict>
			<key>begin</key>
			<string>[$]</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>support.punctuation.section.template.begin.StringTemplate</string>
				</dict>
			</dict>
			<key>end</key>
			<string>[$]</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>support.punctuation.section.template.end.StringTemplate</string>
				</dict>
			</dict>
			<key>name</key>
			<string>storage.other.StringTemplate</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(;)</string>
					<key>name</key>
					<string>punctuation.terminator.StringTemplate</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#keywords</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#conditional</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#variable_access</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#template_call</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#anonymous_template</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#named_args</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.terminator.StringTemplate</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>variable.parameter.StringTemplate</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>string.quoted.double.StringTemplate</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(;)\s*(\w+)\s*=\s*["{](.*)["}]</string>
					<key>name</key>
					<string>entity.name.tag.StringTemplate</string>
				</dict>
				<dict>
					<key>match</key>
					<string>{.*}</string>
					<key>name</key>
					<string>constant.character.escape.untitled</string>
				</dict>
			</array>
		</dict>
		<key>template_call</key>
		<dict>
			<key>match</key>
			<string>\w+</string>
			<key>name</key>
			<string>meta.method.identifier.StringTemplate</string>
		</dict>
		<key>variable_access</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.separator.StringTemplate</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(\w+)(([.])\(?(\w+)\)?)*</string>
			<key>name</key>
			<string>variable.other.StringTemplate</string>
		</dict>
	</dict>
	<key>scopeName</key>
	<string>source.StringTemplate</string>
	<key>uuid</key>
	<string>51825919-0BAE-476F-8679-B2361CDAC9B7</string>
</dict>
</plist>
